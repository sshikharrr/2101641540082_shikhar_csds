#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node*next;
};
struct node*insert1(struct node*pt,int value){
	struct node*temp;
	struct node*ptr1=(struct node*)malloc(sizeof(struct node));
	ptr1->data=value;
	ptr1->next=NULL;
	if(pt==NULL){
		ptr1->next=pt;
		pt=ptr1;
	}
	else{
		temp=pt;
		while(temp->next!=NULL){
			temp=temp->next;
		}
		ptr1->next=temp->next;
		temp->next=ptr1;
	}
	return pt;
}
struct node* reverse(struct node*head){
	if(head==NULL || head->next==NULL){
		return head;
	}
	struct node*new1;
	struct node*first;
	new1=reverse(head->next);
	first=head->next;
	first->next=head;
	head->next=NULL;
	return new1;
}

int palindrome(struct node*head1,struct node*head2){
	while(head1!=NULL){
		if(head1->data!=head2->data){
			
			return 0;
		}
		head1=head1->next;
		head2=head2->next;
	}
	return 1;
}
int main()
{
	struct node*head1=NULL;
	struct node*head2;
	int n;
	printf("Enter the number of elements");
	scanf("%d",&n);
	int value;
	for(int i=0;i<n;i++){
		printf("Enter the %d element",i+1);
		scanf("%d",&value);
		head1=insert1(head1,value);
	}
	head2=reverse(head1);	
	int k=palindrome(head1,head2);
	if(k==1){
		printf("The list is palindromic");
	}
	else{
		printf("The list is not palindromic");
	}
	
	
}
